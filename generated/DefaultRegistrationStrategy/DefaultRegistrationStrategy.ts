// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EnabledSet extends ethereum.Event {
  get params(): EnabledSet__Params {
    return new EnabledSet__Params(this);
  }
}

export class EnabledSet__Params {
  _event: EnabledSet;

  constructor(event: EnabledSet) {
    this._event = event;
  }

  get _tokenNamehash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class LengthCostSet extends ethereum.Event {
  get params(): LengthCostSet__Params {
    return new LengthCostSet__Params(this);
  }
}

export class LengthCostSet__Params {
  _event: LengthCostSet;

  constructor(event: LengthCostSet) {
    this._event = event;
  }

  get _tokenNamehash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _prices(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class MultiYearDiscountSet extends ethereum.Event {
  get params(): MultiYearDiscountSet__Params {
    return new MultiYearDiscountSet__Params(this);
  }
}

export class MultiYearDiscountSet__Params {
  _event: MultiYearDiscountSet;

  constructor(event: MultiYearDiscountSet) {
    this._event = event;
  }

  get _tokenNamehash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _discounts(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class PremiumNameSet extends ethereum.Event {
  get params(): PremiumNameSet__Params {
    return new PremiumNameSet__Params(this);
  }
}

export class PremiumNameSet__Params {
  _event: PremiumNameSet;

  constructor(event: PremiumNameSet) {
    this._event = event;
  }

  get _tokenNamehash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _label(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ReservedNameSet extends ethereum.Event {
  get params(): ReservedNameSet__Params {
    return new ReservedNameSet__Params(this);
  }
}

export class ReservedNameSet__Params {
  _event: ReservedNameSet;

  constructor(event: ReservedNameSet) {
    this._event = event;
  }

  get _tokenNamehash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get _claimant(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _label(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DefaultRegistrationStrategy extends ethereum.SmartContract {
  static bind(address: Address): DefaultRegistrationStrategy {
    return new DefaultRegistrationStrategy(
      "DefaultRegistrationStrategy",
      address
    );
  }

  getPriceInDollars(
    _buyingAddress: Address,
    _parentNamehash: Bytes,
    _label: string,
    _registrationLength: BigInt,
    _isRenewal: boolean
  ): BigInt {
    let result = super.call(
      "getPriceInDollars",
      "getPriceInDollars(address,bytes32,string,uint256,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_buyingAddress),
        ethereum.Value.fromFixedBytes(_parentNamehash),
        ethereum.Value.fromString(_label),
        ethereum.Value.fromUnsignedBigInt(_registrationLength),
        ethereum.Value.fromBoolean(_isRenewal)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPriceInDollars(
    _buyingAddress: Address,
    _parentNamehash: Bytes,
    _label: string,
    _registrationLength: BigInt,
    _isRenewal: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPriceInDollars",
      "getPriceInDollars(address,bytes32,string,uint256,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_buyingAddress),
        ethereum.Value.fromFixedBytes(_parentNamehash),
        ethereum.Value.fromString(_label),
        ethereum.Value.fromUnsignedBigInt(_registrationLength),
        ethereum.Value.fromBoolean(_isRenewal)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isEnabled(param0: Bytes): boolean {
    let result = super.call("isEnabled", "isEnabled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isEnabled(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("isEnabled", "isEnabled(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lengthCost(param0: Bytes, param1: BigInt): BigInt {
    let result = super.call(
      "lengthCost",
      "lengthCost(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_lengthCost(param0: Bytes, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lengthCost",
      "lengthCost(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  multiYearDiscount(param0: Bytes, param1: BigInt): BigInt {
    let result = super.call(
      "multiYearDiscount",
      "multiYearDiscount(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_multiYearDiscount(
    param0: Bytes,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "multiYearDiscount",
      "multiYearDiscount(bytes32,uint256):(uint256)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  multicall(data: Array<Bytes>): Array<Bytes> {
    let result = super.call("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);

    return result[0].toBytesArray();
  }

  try_multicall(data: Array<Bytes>): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  multicallWithNodeCheck(nodehash: Bytes, data: Array<Bytes>): Array<Bytes> {
    let result = super.call(
      "multicallWithNodeCheck",
      "multicallWithNodeCheck(bytes32,bytes[]):(bytes[])",
      [
        ethereum.Value.fromFixedBytes(nodehash),
        ethereum.Value.fromBytesArray(data)
      ]
    );

    return result[0].toBytesArray();
  }

  try_multicallWithNodeCheck(
    nodehash: Bytes,
    data: Array<Bytes>
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "multicallWithNodeCheck",
      "multicallWithNodeCheck(bytes32,bytes[]):(bytes[])",
      [
        ethereum.Value.fromFixedBytes(nodehash),
        ethereum.Value.fromBytesArray(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  premiumNames(param0: Bytes): BigInt {
    let result = super.call("premiumNames", "premiumNames(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBigInt();
  }

  try_premiumNames(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "premiumNames",
      "premiumNames(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registrationManager(): Address {
    let result = super.call(
      "registrationManager",
      "registrationManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_registrationManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registrationManager",
      "registrationManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservedNames(param0: Bytes): Address {
    let result = super.call(
      "reservedNames",
      "reservedNames(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_reservedNames(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservedNames",
      "reservedNames(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tld(): Address {
    let result = super.call("tld", "tld():(address)", []);

    return result[0].toAddress();
  }

  try_tld(): ethereum.CallResult<Address> {
    let result = super.tryCall("tld", "tld():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class MulticallWithNodeCheckCall extends ethereum.Call {
  get inputs(): MulticallWithNodeCheckCall__Inputs {
    return new MulticallWithNodeCheckCall__Inputs(this);
  }

  get outputs(): MulticallWithNodeCheckCall__Outputs {
    return new MulticallWithNodeCheckCall__Outputs(this);
  }
}

export class MulticallWithNodeCheckCall__Inputs {
  _call: MulticallWithNodeCheckCall;

  constructor(call: MulticallWithNodeCheckCall) {
    this._call = call;
  }

  get nodehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class MulticallWithNodeCheckCall__Outputs {
  _call: MulticallWithNodeCheckCall;

  constructor(call: MulticallWithNodeCheckCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class SetIsEnabledCall extends ethereum.Call {
  get inputs(): SetIsEnabledCall__Inputs {
    return new SetIsEnabledCall__Inputs(this);
  }

  get outputs(): SetIsEnabledCall__Outputs {
    return new SetIsEnabledCall__Outputs(this);
  }
}

export class SetIsEnabledCall__Inputs {
  _call: SetIsEnabledCall;

  constructor(call: SetIsEnabledCall) {
    this._call = call;
  }

  get _parentNamehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _isEnabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetIsEnabledCall__Outputs {
  _call: SetIsEnabledCall;

  constructor(call: SetIsEnabledCall) {
    this._call = call;
  }
}

export class SetLengthCostCall extends ethereum.Call {
  get inputs(): SetLengthCostCall__Inputs {
    return new SetLengthCostCall__Inputs(this);
  }

  get outputs(): SetLengthCostCall__Outputs {
    return new SetLengthCostCall__Outputs(this);
  }
}

export class SetLengthCostCall__Inputs {
  _call: SetLengthCostCall;

  constructor(call: SetLengthCostCall) {
    this._call = call;
  }

  get _parentNamehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetLengthCostCall__Outputs {
  _call: SetLengthCostCall;

  constructor(call: SetLengthCostCall) {
    this._call = call;
  }
}

export class SetMultiYearDiscountCall extends ethereum.Call {
  get inputs(): SetMultiYearDiscountCall__Inputs {
    return new SetMultiYearDiscountCall__Inputs(this);
  }

  get outputs(): SetMultiYearDiscountCall__Outputs {
    return new SetMultiYearDiscountCall__Outputs(this);
  }
}

export class SetMultiYearDiscountCall__Inputs {
  _call: SetMultiYearDiscountCall;

  constructor(call: SetMultiYearDiscountCall) {
    this._call = call;
  }

  get _parentNamehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _discounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetMultiYearDiscountCall__Outputs {
  _call: SetMultiYearDiscountCall;

  constructor(call: SetMultiYearDiscountCall) {
    this._call = call;
  }
}

export class SetPremiumNamesCall extends ethereum.Call {
  get inputs(): SetPremiumNamesCall__Inputs {
    return new SetPremiumNamesCall__Inputs(this);
  }

  get outputs(): SetPremiumNamesCall__Outputs {
    return new SetPremiumNamesCall__Outputs(this);
  }
}

export class SetPremiumNamesCall__Inputs {
  _call: SetPremiumNamesCall;

  constructor(call: SetPremiumNamesCall) {
    this._call = call;
  }

  get _parentNamehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _labels(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get _priceInDollarsPerYear(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetPremiumNamesCall__Outputs {
  _call: SetPremiumNamesCall;

  constructor(call: SetPremiumNamesCall) {
    this._call = call;
  }
}

export class SetReservedNamesCall extends ethereum.Call {
  get inputs(): SetReservedNamesCall__Inputs {
    return new SetReservedNamesCall__Inputs(this);
  }

  get outputs(): SetReservedNamesCall__Outputs {
    return new SetReservedNamesCall__Outputs(this);
  }
}

export class SetReservedNamesCall__Inputs {
  _call: SetReservedNamesCall;

  constructor(call: SetReservedNamesCall) {
    this._call = call;
  }

  get _parentNamehash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _labels(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get _claimants(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class SetReservedNamesCall__Outputs {
  _call: SetReservedNamesCall;

  constructor(call: SetReservedNamesCall) {
    this._call = call;
  }
}
